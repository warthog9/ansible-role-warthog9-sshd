---
#   Copyright Red Hat, Inc. All Rights Reserved.
#
#   Licensed under the Apache License, Version 2.0 (the "License"); you may
#   not use this file except in compliance with the License. You may obtain
#   a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
#   Unless required by applicable law or agreed to in writing, software
#   distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
#   WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
#   License for the specific language governing permissions and limitations
#   under the License.
#
#   Author: David Moreau Simard <dms@redhat.com>
#   Taken from: https://dmsimard.com/2016/03/15/changing-the-ssh-port-with-ansible/ on Mar 18, 2019
#   Continued modification by John 'Warthog9' Hawley

# ansible_port can change throughout this role, keep a copy around
- name: Set configured port fact
  set_fact:
    configured_port: "{{ ansible_port }}"
  when: ansible_port is defined

- name: Set configured port fact
  set_fact:
    configured_port: "22"
  when: ansible_port is undefined

# If unreachable on port 22, check if we're able to reach
# {{ inventory_hostname }} on {{ ansible_port }} provided by the inventory
# from localhost
- name: Check if we're using the inventory-provided SSH port
  wait_for:
    port: "{{ ansible_port }}"
    state: "started"
    host: "{{ inventory_hostname }}"
    connect_timeout: "5"
    timeout: "10"
  delegate_to: "localhost"
  ignore_errors: "yes"
  register: configured_ssh

# If {{ ansible_port }} is reachable, we don't need to do anything special
- name: SSH port is configured properly
  debug:
    msg: "SSH port is configured properly"
  when: configured_ssh is defined and
        configured_ssh.state is defined and
        configured_ssh.state == "started"
  register: ssh_port_set

# From localhost, check if we're able to reach {{ inventory_hostname }} on
# port 22
- name: Check if we're using the default SSH port
  wait_for:
    port: "22"
    state: "started"
    host: "{{ inventory_hostname }}"
    connect_timeout: "5"
    timeout: "10"
  delegate_to: "localhost"
  ignore_errors: "yes"
  register: default_ssh
  when: configured_ssh is defined and
        configured_ssh.state is undefined

# If reachable, continue the following tasks with this port
- name: Set inventory ansible_port to default
  set_fact:
    ansible_port: "22"
  when: default_ssh is defined and
        default_ssh.state is defined and
        default_ssh.state == "started"
  register: ssh_port_set

# If the SSH port is neither the default or the configured, give up.
- name: Fail if SSH port was not auto-detected (unknown)
  fail:
    msg: "The SSH port is neither 22 or {{ ansible_port }}."
  when: ssh_port_set is undefined

# Sanity check, make sure Ansible is able to connect to the host
- name: Confirm host connection works
  ping:

- name: Setup alternate SSH port
  lineinfile:
    dest: "/etc/ssh/sshd_config"
    regexp: "^#*Port[ \t]*"
    line: "Port {{ configured_port }}"
  notify: "Restart sshd"

- name: Gather package facts for later
  package_facts:
    manager: auto

- name: Gather OS facts now
  setup:
    gather_subset:
      - min

- name: Make sure policycoreutils-python is installed for selinux manipulation
  package:
    name: [ 'policycoreutils-python' ]
    state: present
  when: ( ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux' ) and ansible_facts['distribution_major_version']|int <= 7
  notify: "Restart sshd"

- name: Make sure policycoreutils-python-utils is installed for selinux manipulation
  package:
    name: [ 'policycoreutils-python-utils' ]
    state: present
  when: ansible_distribution == 'Fedora' or
        ( ( ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux' ) and ansible_facts['distribution_major_version']|int > 7 )
  notify: "Restart sshd"

- name: Ensure nftables is installed
  package:
    name: [ 'nftables' ]
    state: present

- name: Setup selinux for alternate SSH port
  seport:
    ports: "{{ configured_port }}"
    proto: "tcp"
    setype: "ssh_port_t"
    state: "present"
  notify: "Restart sshd"
  when: ansible_distribution == 'Fedora' or ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux'

- name: Configure FirewallD - Fedora
  firewalld:
    port: "{{ ansible_port }}/tcp"
    zone: public
    state: enabled
  ignore_errors: "yes"
  when: '"firewalld" in ansible_facts.packages'

- name: Lets just make sure that /etc/nftables exists
  file:
    path: /etc/nftables
    state: directory
    mode: 0755

- name: Copy over the relevant nftables firewall config fragment - Extra Port
  template:
    src: ssh.nft.j2
    dest: /etc/nftables/sshd.conf
  when: ansible_port is defined
        and
        ansible_port != "22"
        and
        (
                ( ansible_distribution == 'Fedora' and ansible_facts['distribution_major_version']|int < 31 )
                or
                ansible_distribution == 'CentOS'
                or
                ansible_distribution == 'Red Hat Enterprise Linux'
        )

- name: Copy over the relevant nftables firewall config fragment - Extra Port
  template:
    src: ssh.nft.newformat.j2
    dest: /etc/nftables/sshd.conf
  when: ansible_port is defined
        and
        ansible_port != "22"
        and
        ansible_distribution == 'Fedora'
        and
        ansible_facts['distribution_major_version']|int >= 31


- name: Copy over the relevant nftables firewall config fragment - Standard Port
  template:
    src: ssh-stdport.nft.j2
    dest: /etc/nftables/sshd.conf
  when: ansible_port is defined
        and
        ansible_port == "22"

#- name: Include the baseline config in /etc/sysconfig/nftables
#  lineinfile:
#    dest: /etc/sysconfig/nftables.conf
#    line: "include \"/etc/nftables/baseline.conf\""
#    regexp: "^include \"/etc/nftables/baseline.conf\""
#    state: present
#  when: '"nftables" in ansible_facts.packages and ( ansible_distribution == "Fedora" or ansible_distribution == "CentOS" or ansible_distribution == "Red Hat Enterprise Linux" )'

# We notified "Restart sshd" if we modified the sshd config.
# By calling flush_handlers, we make sure the handler is run *right now*
- name: Ensure SSH is reloaded if need be
  meta: flush_handlers

# We're done, make sure ansible_port is set properly so that any tasks
# after this use the right ansible_port.
- name: Ensure we use the configured SSH port for the remainder of the role
  set_fact:
    ansible_port: "{{ configured_port }}"

# Gather facts should be set to false when running this role since it will
# fail if the Ansible SSH port is not set correctly.
# We run setup to gather facts here once the SSH port is set up.
- name: Run deferred setup to gather facts
  setup:
